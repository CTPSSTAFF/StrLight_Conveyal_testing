counties <- counties %>% filter(NAME == "Suffolk"|
NAME == "Norfolk"|
NAME == "Middlesex"|
NAME == "Worcester"|
NAME == "Essex"|
NAME == "Plymouth"|
NAME == "Bristol")
}
if (state == "RI"){
counties <- counties %>% filter(NAME == "Providence"|
NAME == "Bristol"|
NAME == "Washington"|
NAME == "Kent")
}
roads <- rbind_tigris(
lapply(counties$NAME, function(x){
roads(state, x, year= year_acs)})
)
}
#get roads for both states
ma_roads <- get_roads_for_state(state="MA", year=year)
get_roads_for_state <- function(state, year){
counties<- counties(state) %>% st_drop_geometry()
if (state == "MA"){
counties <- counties %>% filter(NAME == "Suffolk"|
NAME == "Norfolk"|
NAME == "Middlesex"|
NAME == "Worcester"|
NAME == "Essex"|
NAME == "Plymouth"|
NAME == "Bristol")
}
if (state == "RI"){
counties <- counties %>% filter(NAME == "Providence"|
NAME == "Bristol"|
NAME == "Washington"|
NAME == "Kent")
}
roads <- rbind_tigris(
lapply(counties$NAME, function(x){
roads(state, x, year= year)})
)
}
#get roads for both states
ma_roads <- get_roads_for_state(state="MA", year=year)
ri_roads <- get_roads_for_state(state="RI", year=year)
ma_ri_roads <- rbind(ma_roads,ri_roads)
st_write(all_water,"Data/input/water_ma_ri.geojson")
st_write(ma_ri_roads,"Data/input/roads_ma_ri.geojson",append=FALSE)
use_condaenv(condaenv  = "Py_env/",required = TRUE)# "/" locates the correct location and "required = TRUE" forces reticulate to use this version
source_python("Py_functions/OD_point_generator.py")
source_python("Py_functions/point_water_road_filter.py")
generate_fishnet(working_dir=getwd())
filter_fishnet(working_dir=getwd())
fishnet <- geojson_sf("Data/Processed/filtered_fishnet.geojson") %>%  st_set_crs(4269)
generate_taz_centroids(working_dir=getwd())
rep_points <- geojson_sf("Data/Processed/taz_rep_point.geojson") %>%  st_set_crs(4269)
rep_points
fishnet
od_points <- rbind(fishnet,rep_points)
st_write(od_points,"Data/Processed/od_points.shp")
?st_write
write_sf(od_points,"Data/Processed/od_points.shp")
write_sf(all_water,"Data/input/water_ma_ri.geojson",append=FALSE)
st_write(all_water,"Data/input/water_ma_ri.geojson",append=FALSE,update=TRUE)
write_sf(od_points,"Data/Processed/od_points.shp")
sys_memory <- "75"
java_ram <- paste0("-Xmx",sys_memory,"G")
sys_memory <- 75
java_ram <- paste0("-Xmx",sys_memory,"G")
options(java.parameters = java_ram)
rJava::.jinit()
od_points
od_points %>% mutate(id=cur_group_id())
od_points %>% mutate(id=1:nrow(od_points))
od_points <- od_points %>% mutate(id=1:nrow(od_points))
#taz_grid <- st_read("Data/StreetLight/TAZ_Centroids/Moderate_400m_grid.shp")
#taz_grid$id <- seq.int(nrow(taz_grid))
od_points <- od_points %>%
mutate(long = unlist(map(taz_grid$geometry,1)),
lat = unlist(map(taz_grid$geometry,2))) %>%
select(id,geometry,lat,long)
#taz_grid <- st_read("Data/StreetLight/TAZ_Centroids/Moderate_400m_grid.shp")
#taz_grid$id <- seq.int(nrow(taz_grid))
od_points <- od_points %>%
mutate(long = unlist(map(od_points$geometry,1)),
lat = unlist(map(od_points$geometry,2))) %>%
select(id,geometry,lat,long)
View(od_points)
#path <- "C:/Users/bbact/Desktop/r5r_directory"
r5r_core <- setup_r5(data_path = "Data/Processed/route_network", verbose = F)
library(r5r)
library(tidyverse)
library(sf)
library(tictoc)
#path <- "C:/Users/bbact/Desktop/r5r_directory"
r5r_core <- setup_r5(data_path = "Data/Processed/route_network", verbose = F)
#path <- "C:/Users/bbact/Desktop/r5r_directory"
r5r_core <- setup_r5(data_path = "Data/Processed/routing_network", verbose = F)
install.packages('osmextract')
library(osmextract)
?setup_r5
oe_match("Massachusetts")
oe_match("Massachusetts",provider = "geofabrik")
oe_match("massachusetts",provider = "geofabrik")
oe_match("us/massachusetts",provider = "geofabrik")
oe_match("us/rhode-island",provider = "geofabrik")
?oe_get()
oe_download_directory()
?oe_download_directory()
oe_download_directory("input/Base_network")
oe_download_directory() <- "input/Base_network"
oe_get("us/massachusetts",provider = "geofabrik",download_directory = "input/Base_network")
OSMEXT_DOWNLOAD_DIRECTORY
library(usethis)
oe_get("us/rhode-island",provider = "geofabrik")
match <- oe_match("us/rhode-island",provider = "geofabrik")
View(match)
temp_loc <- pbf = file.path(tempdir(), "geofabrik_rhode-island-latest.osm.pbf")
temp_loc <- file.path(tempdir(), "geofabrik_rhode-island-latest.osm.pbf")
temp_loc
temp_loc <- file.path(tempdir(), "\\geofabrik_rhode-island-latest.osm.pbf")
temp_loc
temp_loc <- file.path(tempdir(), "geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = temp_loc,
to = "input/Base_network",
overwrite = TRUE
)
file.copy(
from = temp_loc,
to = "input/Base_network/geofabrik_rhode-island-latest.osm.pbf",
overwrite = TRUE
)
tempdir()
paste0(tempdir(),"\\geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = paste0(tempdir(),"\\geofabrik_rhode-island-latest.osm.pbf"),
to = "input/Base_network/geofabrik_rhode-island-latest.osm.pbf",
overwrite = TRUE
)
temp_loc <- file.path(tempdir())
temp_loc
file.copy(
from = paste0(temp_loc,"\\geofabrik_rhode-island-latest.osm.pbf"),
to = "input/Base_network/geofabrik_rhode-island-latest.osm.pbf",
overwrite = TRUE
)
paste0(getwd(),"input/Base_network/geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = paste0(temp_loc,"\\geofabrik_rhode-island-latest.osm.pbf"),
to = paste0(getwd(),"input/Base_network/geofabrik_rhode-island-latest.osm.pbf"),
overwrite = TRUE
)
file.copy(
from = paste0(temp_loc,"\\geofabrik_rhode-island-latest.osm.pbf"),
to = paste0(getwd(),"/input/Base_network/geofabrik_rhode-island-latest.osm.pbf"),
overwrite = TRUE
)
?file.copy()
file.copy("geofabrik_rhode-island-latest.osm.pbf",
from = file.path(tempdir()),
to = paste0(getwd(),"/input/Base_network/"),
overwrite = TRUE
)
paste0(getwd(),"/input/Base_network/")
file.copy("geofabrik_rhode-island-latest.osm.pbf",
from = paste0(temp_loc,"geofabrik_rhode-island-latest.osm.pbf"),
to = paste0(getwd(),"/input/Base_network","geofabrik_rhode-island-latest.osm.pbf"),
overwrite = TRUE
)
file.copy(
from = paste0(temp_loc,"geofabrik_rhode-island-latest.osm.pbf"),
to = paste0(getwd(),"/input/Base_network","geofabrik_rhode-island-latest.osm.pbf"),
overwrite = TRUE
)
paste0(getwd(),"/input/Base_network","geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = paste0(temp_loc,"geofabrik_rhode-island-latest.osm.pbf"),
to = paste0(getwd(),"/input/Base_network/","geofabrik_rhode-island-latest.osm.pbf"),
overwrite = TRUE
)
paste0(temp_loc,"geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = paste0(temp_loc,"\\","geofabrik_rhode-island-latest.osm.pbf"),
to = paste0(getwd(),"/input/Base_network/","geofabrik_rhode-island-latest.osm.pbf"),
overwrite = TRUE
)
file.copy(
from = paste0(temp_loc,"\\","geofabrik_rhode-island-latest.osm.pbf"),
to = paste0(getwd(),"/input/Base_network/"),
overwrite = TRUE
)
file.copy(
from = paste0(temp_loc,"\\","geofabrik_rhode-island-latest.osm.pbf"),
to = paste0(getwd(),"/input/Base_network"),
overwrite = TRUE
)
temp_loc <- file.path(tempdir(),"geofabrik_rhode-island-latest.osm.pbf")
temp_loc
temp_loc <- file.path(tempdir(),"geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = temp_loc,
to = paste0(getwd(),"/input/Base_network/"),
overwrite = TRUE
)
temp_loc2 <- file.path(getwd(),"geofabrik_rhode-island-latest.osm.pbf")
temp_loc2
temp_loc <- file.path(tempdir(),"geofabrik_rhode-island-latest.osm.pbf")
temp_loc2 <- file.path(getwd(),"geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = temp_loc,
to = temp_loc2,
overwrite = TRUE
)
getwd()
temp_loc <- file.path(tempdir(),"geofabrik_rhode-island-latest.osm.pbf")
temp_loc2 <- file.path(getwd(),"/input/Base_network","geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = temp_loc,
to = temp_loc2,
overwrite = TRUE
)
temp_loc <- file.path(tempdir(),"geofabrik_rhode-island-latest.osm.pbf")
temp_loc2 <- file.path(getwd(),"input/Base_network","geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = temp_loc,
to = temp_loc2,
overwrite = TRUE
)
temp_loc2 <- file.path(getwd(),"Data/input/Base_network","geofabrik_rhode-island-latest.osm.pbf")
file.copy(
from = temp_loc,
to = temp_loc2,
overwrite = TRUE
)
match
pbf_name <- oe_match("us/rhode-island",provider = "geofabrik")
pbf_name$url <- oe_match("us/rhode-island",provider = "geofabrik")
pbf_name <- oe_match("us/rhode-island",provider = "geofabrik")$url
pbf_name
pbf_name <- strsplit(oe_match("us/rhode-island",provider = "geofabrik")$url,sep="/")
?strsplit
pbf_name <- strsplit(oe_match("us/rhode-island",provider = "geofabrik")$url,split="/")
pbf_name
pbf_name[1]
pbf_name[[1]]
pbf_name[[1]][1]
pbf_name[[1]][-1]
pbf_name[[1]][-2]
pbf_name[[1]][-5]
pbf_name[[1]][5]
pbf_name[[1]][6]
pbf_name <- tail(strsplit(oe_match("us/rhode-island",provider = "geofabrik")$url,split="/")[[1]],n=1)
pbf_name
oe_get("us/rhode-island",provider = "geofabrik")
pbf_name <- tail(strsplit(oe_match("us/rhode-island",provider = "geofabrik")$url,split="/")[[1]],n=1)
temp_loc <- file.path(tempdir(),pbf_name)
proj_loc <- file.path(getwd(),"Data/input/Base_network",pbf_name)
file.copy(
from = temp_loc,
to = proj_loc,
overwrite = TRUE
)
temp_loc
file.copy(
from = temp_loc,
to = proj_loc,
overwrite = TRUE
)
pbf_name <- paste0("geofabrik",tail(strsplit(oe_match("us/rhode-island",provider = "geofabrik")$url,split="/")[[1]],n=1))
pbf_name
pbf_name <- paste0("geofabrik_",tail(strsplit(oe_match("us/rhode-island",provider = "geofabrik")$url,split="/")[[1]],n=1))
temp_loc <- file.path(tempdir(),pbf_name)
proj_loc <- file.path(getwd(),"Data/input/Base_network",pbf_name)
file.copy(
from = temp_loc,
to = proj_loc,
overwrite = TRUE
)
?file.remove()
file.remove(temp_loc)
oe_get("us/rhode-island",provider = "geofabrik")
pbf_name <- paste0("geofabrik_",tail(strsplit(oe_match("us/rhode-island",provider = "geofabrik")$url,split="/")[[1]],n=1))
temp_loc <- file.path(tempdir(),pbf_name)
proj_loc <- file.path(getwd(),paste0("Data/input/",network_dir),pbf_name)
file.copy(from = temp_loc, to = proj_loc, overwrite = TRUE)
file.remove(temp_loc)
network_dir="Base_network"
temp_loc <- file.path(tempdir(),pbf_name)
proj_loc <- file.path(getwd(),paste0("Data/input/",network_dir),pbf_name)
file.copy(from = temp_loc, to = proj_loc, overwrite = TRUE)
oe_get("us/rhode-island",provider = "geofabrik")
pbf_name <- paste0("geofabrik_",tail(strsplit(oe_match("us/rhode-island",provider = "geofabrik")$url,split="/")[[1]],n=1))
temp_loc <- file.path(tempdir(),pbf_name)
proj_loc <- file.path(getwd(),paste0("Data/input/",network_dir),pbf_name)
file.copy(from = temp_loc, to = proj_loc, overwrite = TRUE)
file.remove(temp_loc)
oe_get("us/massachusetts",provider = "geofabrik")
pbf_name <- paste0("geofabrik_",tail(strsplit(oe_match("us/massachusetts",provider = "geofabrik")$url,split="/")[[1]],n=1))
temp_loc <- file.path(tempdir(),pbf_name)
proj_loc <- file.path(getwd(),paste0("Data/input/",network_dir),pbf_name)
file.copy(from = temp_loc, to = proj_loc, overwrite = TRUE)
file.remove(temp_loc)
r5r_network <- setup_r5(data_path = "Data/input/Base_network", verbose = F)
gtfs="gtfs_base_031522_v2"
file.path(tempdir(),paste0(gtfs,".zip"))
gtfs_loc <- file.path(getwd(),paste0(gtfs,".zip"))
gtfs_loc
file.path(getwd(),paste0("Data/input/",network_dir),paste0(gtfs,".zip"))
gtfs_loc <- file.path(getwd(),paste0("Data/input/",gtfs,".zip"))
net_loc <- file.path(getwd(),paste0("Data/input/",network_dir),paste0(gtfs,".zip"))
gtfs_loc
net_loc
gtfs_loc <- file.path(getwd(),paste0("Data/input/GTFS",gtfs,".zip"))
net_loc <- file.path(getwd(),paste0("Data/input/",network_dir),paste0(gtfs,".zip"))
file.copy(from = gtfs_loc, to = net_loc, overwrite = TRUE)
gtfs_loc
gtfs_loc <- file.path(getwd(),paste0("Data/input/GTFS/",gtfs,".zip"))
net_loc <- file.path(getwd(),paste0("Data/input/",network_dir),paste0(gtfs,".zip"))
file.copy(from = gtfs_loc, to = net_loc, overwrite = TRUE)
paste0(getwd(),network_dir)
paste0(getwd(),"/",network_dir)
files <- list.files(network_loc, include.dirs = F, full.names = T, recursive = T)
network_loc <- paste0(getwd(),"/",network_dir)
files <- list.files(network_loc, include.dirs = F, full.names = T, recursive = T)
files
network_loc
network_loc <- paste0(getwd(),"Data/input/",network_dir)
files <- list.files(network_loc, include.dirs = F, full.names = T, recursive = T)
network_loc <- paste0(getwd(),"Data/input/",network_dir)
network_loc
network_loc <- paste0(getwd(),"/Data/input/",network_dir)
files <- list.files(network_loc, include.dirs = F, full.names = T, recursive = T)
files
file.remove(file_list)
file_list <- list.files(network_loc, include.dirs = F, full.names = T, recursive = T)
file.remove(file_list)
source("./Analysis/Build_network.R")
source("./Analysis/Cleanup_network_files.R")
source("./R_functions/OD_point_functions.R")
source("./Analysis/Build_network.R")
source("./Analysis/Cleanup_network_files.R")
paste("network files removed from ",network_dir)
paste("network files removed from",getwd(),"/Data/input/",network_dir)
paste0("network files removed from",getwd(),"/Data/input/",network_dir)
paste0("network files removed from ",getwd(),"/Data/input/",network_dir)
source("./R_functions/OD_point_functions.R")
source("./Analysis/Build_network.R")
source("./Analysis/Cleanup_network_files.R")
base_network <- build_network(sys_memory="75",network_dir="Base_network",gtfs="gtfs_base_031522_v2")
cleanup_network(network_dir="Base_network")
od_points
source("./Analysis/Transit_routing_r5r.R")
base_network
od_points
source("./Analysis/Transit_routing_r5r.R")
route_between_points(network=base_network,od_points=od_points, sys_memory="75")
source("./Analysis/Transit_routing_r5r.R")
route_between_points(network=base_network,od_points=od_points, sys_memory="75")
od_points
source("./R_functions/OD_point_functions.R")
source("./Analysis/Build_network.R")
source("./Analysis/Cleanup_network_files.R")
source("./Analysis/Transit_routing_r5r.R")
od_points <- create_od_points(state=c("MA","RI"), year=2020)
od_points
base_network <- build_network(network_dir="Base_network",gtfs="gtfs_base_031522_v2",sys_memory="75")
cleanup_network(network_dir="Base_network")
route_between_points(network=base_network,od_points=od_points, sys_memory="75")
base_matrix <- route_between_points(network=base_network,od_points=od_points, sys_memory="75")
View(base_matrix)
unique(base_matrix$routes)
library(tidyverse)
stops <- read.csv("Data/BNR_GTFS/gtfs_bnrd_041922/stops.txt")
View(stops)
unique(stops$stop_id)
stops %>% filter(stop_id == "place-armnl")
stops$parent_station <- NA
View(stops)
stops_base <- read.csv("Data/BNR_GTFS/gtfs_base_031522_v2/stops.txt")
unique(stops_base$parent_station)
stops <- read.csv("Data/BNR_GTFS/gtfs_bnrd_041922_v2/stops.txt")
stops$parent_station <- NA
write_delim(stops,"Data/BNR_GTFS/gtfs_bnrd_041922_v2/stops.txt")
?write_delim
write_delim(stops,"Data/BNR_GTFS/gtfs_bnrd_041922_v2/stops.txt",delim = ",")
print("")
print("/"/"")
print("\"\"")
write_delim(stops,"Data/BNR_GTFS/gtfs_bnrd_041922_v2/stops.txt",delim = ",",na="\"\"")
prop_network <- build_network(network_dir="Prop_network",gtfs="gtfs_bnrd_041922_v2",sys_memory="75")
source("./Analysis/Transit_routing_r5r.R")
prop_network <- build_network(network_dir="Prop_network",gtfs="gtfs_bnrd_041922_v2",sys_memory="75")
source("./Analysis/Build_network.R")
prop_network <- build_network(network_dir="Prop_network",gtfs="gtfs_bnrd_041922_v2",sys_memory="75")
cleanup_network(network_dir="Prop_network")
prop_matrix <- route_between_points(network=prop_network,od_points=od_points, sys_memory="75")
base_matrix
mean(base_matrix$travel_time)
mean(prop_matrix$travel_time)
base_matrix %>% filter(fromId != toID)
base_matrix %>% filter("fromId" == "toID")
base_matrix %>% filter("fromId == toID")
base_matrix %>% filter_("fromId == toID")
?filter
base_matrix %>% filter(fromId > toID)
base_matrix %>% filter(`fromId` > `toID`)
base_matrix %>% mutate(same_taz = case_when(
fromId == toID ~ 1,
TRUE ~ 0
))
base_matrix %>% filter(fromId > toId)
base_matrix %>% filter(fromId == toId)
base_matrix %>% filter(fromId != toId)
base_matrix <- base_matrix %>% filter(fromId != toId)
prop_matrix <- prop_matrix %>% filter(fromId != toId)
View(base_matrix)
base_matrix %>% group_by(fromId,toId) %>%
summarize(mean(travel_time))
matrix_mean <- base_matrix %>% group_by(fromId,toId) %>%
summarize(mean(travel_time))
source("./R_functions/OD_point_functions.R")
source("./Analysis/Build_network.R")
source("./Analysis/Cleanup_network_files.R")
source("./Analysis/Transit_routing_r5r.R")
sys_memory <- "50"
baseline_gtfs <- "gtfs_base_031522_v2"
proposed_gtfs <- "gtfs_bnrd_041922_v2"
od_points <- readRDS("C:/Users/bbact/Documents/od_points.rds")
base_network <- build_network(network_dir="Base_network",gtfs=baseline_gtfs,sys_memory=sys_memory)
library(r5r)
library(tidyverse)
library(sf)
library(tictoc)
library(osmextract)
java_ram <- paste0("-Xmx",sys_memory,"G")
options(java.parameters = java_ram)
rJava::.jinit()
library(rJava)
rJava::.jinit()
library(rJava)
rJava::.jinit()
java_ram <- paste0("-Xmx",sys_memory,"G")
java_ram <- paste0("-Xmx",sys_memory,"G")
library(rJava)
sys_memory <- "50"
java_ram <- paste0("-Xmx",sys_memory,"G")
options(java.parameters = java_ram)
rJava::.jinit()
options(java.parameters = java_ram)
rJava::.jinit()
rJava::.jinit(force.init=TRUE)
rJava::.jinit(force.init=TRUE)
sys_memory <- "50"
java_ram <- paste0("-Xmx",sys_memory,"G")
options(java.parameters = java_ram)
sys_memory <- "50" #system memory in GB to allocate to Java
java_ram <- paste0("-Xmx",sys_memory,"G")
rJava::.jinit(force.init=TRUE,parameters=java_ram)
source("./R_functions/OD_point_functions.R")
source("./Analysis/Build_network.R")
source("./Analysis/Cleanup_network_files.R")
source("./Analysis/Transit_routing_r5r.R")
baseline_gtfs <- "gtfs_base_031522_v2"
proposed_gtfs <- "gtfs_bnrd_041922_v2"
source("./Analysis/Build_network.R")
od_points <- readRDS("C:/Users/bbact/Documents/od_points.rds")
base_network <- build_network(network_dir="Base_network",gtfs=baseline_gtfs,sys_memory=sys_memory)
library(r5r)
library(tidyverse)
library(sf)
library(tictoc)
library(osmextract)
library(rJava)
r5r_network <- setup_r5(data_path = paste0("Data/input/",network_dir), verbose = F)
network_dir <- "Base_network"
r5r_network <- setup_r5(data_path = paste0("Data/input/",network_dir), verbose = F)
options(java.parameters)
rm(list = ls())
library(rJava)
sys_memory <- "50000" #system memory in MB to allocate to Java
java_ram <- paste0("-Xmx",sys_memory,"m")
options(java.parameters = java_ram)
rJava::.jinit(force.init=TRUE)
source("./R_functions/OD_point_functions.R")
source("./Analysis/Build_network.R")
source("./Analysis/Cleanup_network_files.R")
source("./Analysis/Transit_routing_r5r.R")
baseline_gtfs <- "gtfs_base_031522_v2"
proposed_gtfs <- "gtfs_bnrd_041922_v2"
od_points <- readRDS("C:/Users/bbact/Documents/od_points.rds")
gtfs=baseline_gtfs
network_dir="Base_network"
r5r_network <- setup_r5(data_path = paste0("Data/input/",network_dir), verbose = F)
cleanup_network(network_dir="Base_network")
base_matrix <- route_between_points(network=base_network,od_points=od_points, sys_memory=sys_memory)
base_network <- r5r_network
base_matrix <- route_between_points(network=base_network,od_points=od_points, sys_memory=sys_memory)
base_matrix
prop_network <- build_network(network_dir="Prop_network",gtfs=gtfs_bnrd_041922_v2,sys_memory=sys_memory)
baseline_gtfs <- "gtfs_base_031522_v2"
proposed_gtfs <- "gtfs_bnrd_041922_v2"
od_points <- readRDS("C:/Users/bbact/Documents/od_points.rds")
prop_network <- build_network(network_dir="Prop_network",gtfs=gtfs_bnrd_041922_v2,sys_memory=sys_memory)
cleanup_network(network_dir="Prop_network")
prop_matrix <- route_between_points(network=prop_network,od_points=od_points, sys_memory=sys_memory)
prop_network <- build_network(network_dir="Prop_network",gtfs="gtfs_bnrd_041922_v2",sys_memory=sys_memory)
cleanup_network(network_dir="Prop_network")
prop_matrix <- route_between_points(network=prop_network,od_points=od_points, sys_memory=sys_memory)
mean(base_matrix$travel_time)
mean(prop_matrix$travel_time)
